#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 4
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Requirements for VR
\begin_inset space ~
\end_inset

JuggLua Navigation Redesign
\end_layout

\begin_layout Author
Ryan Pavlik
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
VR
\begin_inset space ~
\end_inset

JuggLua, and the commonly-used front-end application, known as 
\begin_inset Quotes eld
\end_inset

NavTestbed,
\begin_inset Quotes erd
\end_inset

 allow the user to construct a scene graph and navigate in it by default.
 Additional interactivity is possible by adding Actions.
 The existing navigation code in VR
\begin_inset space ~
\end_inset

JuggLua was written very early in the development process, and while it
 has allowed the successful testing of alternate navigation strategies,
 its weaknesses are becoming more evident at a rapid rate.
 To ensure the next version of the navigation system addresses the motivation
 for providing navigation, provides the functionality needed to replicate
 the desired behavior of earlier experiments, and resolves the issues noticed
 with the current system, this requirements specification was prepared.
\end_layout

\begin_layout Standard
While this spec does add formality to the process, it is intended primarily
 to ensure that no important issues are overlooked, rather than as an exhaustive
 contractual System Requirements Specification.
 Elaboration should only be provided where it is useful to clarify or improve
 the result, and not for the sake of being a comprehensive specification
 of requirements.
\end_layout

\begin_layout Subsection
Participants in Requirements Process
\end_layout

\begin_layout Standard
Ryan A.
 Pavlik drafted the initial version of this document.
 Reviewers' and contributors' names will go here.
 You can also see the history of this file in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
git
\end_layout

\end_inset

 source control system for a revision log.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Structure-of-Requirements"

\end_inset

Structure of Requirements
\end_layout

\begin_layout Standard
Requirements are presented as subsections (and subsubsections, where the
 nested structure is informative) of 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Requirements"

\end_inset

.
 Each requirement's title is a short description for easy reference to the
 requirement (both in discussion and in the Table of Contents).
 A label, followed by content, is included for a subset of the fields below.
 
\begin_inset Quotes eld
\end_inset

Full Description
\begin_inset Quotes erd
\end_inset

 is the only required field, since it's the actual requirement itself.
 All others may be included as it seems useful.
\begin_inset Note Note
status open

\begin_layout Plain Layout
The field label is defined as a 
\begin_inset Quotes eld
\end_inset

Paragraph *
\begin_inset Quotes erd
\end_inset

 in LyX.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Subsubsection
Sample Requirement
\end_layout

\begin_layout Paragraph*
Question
\end_layout

\begin_layout Plain Layout
Any unresolved questions can go here.
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Plain Layout
This is the full, canonical description of a sample requirement expressed
 as a single sentence and phrased using 
\begin_inset Quotes eld
\end_inset

shall
\begin_inset Quotes erd
\end_inset

 (not 
\begin_inset Quotes eld
\end_inset

must
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

should
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Plain Layout
This text presents the reason that this requirement exists and is in the
 spec.
 Often includes a cross-reference to an assumption.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
All assumptions in the LyX document have labels starting with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
sub:assume-
\end_layout

\end_inset

 so please just insert a cross-reference rather than repeat the intent of
 an assumption.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
History
\end_layout

\begin_layout Plain Layout
Any history of changes to this requirement that are important to the continuing
 development (that is, that cannot be left just as commit messages) go here.
 Also, the history of this requirement's implementation in previous systems
 goes here.
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Definitions and System Description
\end_layout

\begin_layout Subsection
People and Systems
\end_layout

\begin_layout Standard
There are several people involved that may be considered 
\begin_inset Quotes eld
\end_inset

users,
\begin_inset Quotes erd
\end_inset

 and several possible meanings of 
\begin_inset Quotes eld
\end_inset

application,
\begin_inset Quotes erd
\end_inset

 so these terms must be clarified.
 A single human may play multiple roles, but these roles should be distinguished
 when possible for clarity.
 The following presents the definitions as used in this document.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
When using these terms, you may consider selecting the word and inserting
 a cross-reference to the appropriate definition.
 (This is equivalent to choosing 
\begin_inset Quotes eld
\end_inset

Textual Reference
\begin_inset Quotes erd
\end_inset

 from the cross-reference right-click menu, and inserts the word, hyperlinked
 to its definition.)
\end_layout

\begin_layout Plain Layout
This shows up like 
\begin_inset Quotes eld
\end_inset

NameRef:def:User
\begin_inset Quotes erd
\end_inset

 in LyX and hyperlinked 
\begin_inset Quotes eld
\end_inset

User
\begin_inset Quotes erd
\end_inset

 in the rendered PDF.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "def:App-Developer"

\end_inset

Application Developer
\end_layout

\begin_layout Standard
The 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

 is the person interacting with the VR
\begin_inset space ~
\end_inset

JuggLua software to build a virtual environment.
 The same human may also play the role of 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

, but their interaction in that role is considered separately from their
 interaction as the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

.
\end_layout

\begin_layout Standard
The 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

 consumes API (and by extension, examples).
 Their technical expertise and goals may vary, from simply using defaults
 to explore a scenegraph, to producing an interactive environment working
 with or overriding parts of navigation defaults.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "def:Application"

\end_inset

Application
\end_layout

\begin_layout Standard
The 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

 is the virtual environment constructed by the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

 using VR
\begin_inset space ~
\end_inset

JuggLua and experienced by the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

.
 The application may be created interactively in NavTestbed or run from
 a script (with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
vrjlua
\end_layout

\end_inset

 interpreter or NavTestbed).
 Insofaras a default navigation behavior of VR
\begin_inset space ~
\end_inset

JuggLua is retained by an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

, it too can be considered part of the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "def:User"

\end_inset

User
\end_layout

\begin_layout Standard
The 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

 refers to the end-user experiencing an immersive virtual environment (the
 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

).
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Coordinate-frames"

\end_inset

Coordinate Frames
\end_layout

\begin_layout Standard
The primary coordinate frames are the 
\begin_inset Quotes eld
\end_inset

world frame
\begin_inset Quotes erd
\end_inset

 (the virtual environment) and the 
\begin_inset Quotes eld
\end_inset

room frame
\begin_inset Quotes erd
\end_inset

 (the physical space of the VR system).
 Initially they are aligned, but navigation is performed by changing the
 relationship between them.
\end_layout

\begin_layout Standard
All coordinate frames are right-handed, with the convention that 
\begin_inset Formula $x$
\end_inset

 extends to the right, 
\begin_inset Formula $y$
\end_inset

 goes up (opposite the direction of gravity), and 
\begin_inset Formula $z$
\end_inset

 goes toward the user (in a non-immersive description, 
\begin_inset Quotes eld
\end_inset

out of the screen
\begin_inset Quotes erd
\end_inset

).
 The origin of the room frame may be anywhere, but is typically on the floor
 of the immersive system in the 
\begin_inset Formula $y$
\end_inset

 direction and somewhere in the immersive space (at a corner or in the middle)
 in the 
\begin_inset Formula $(x,z)$
\end_inset

 plane.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Moving-the-world"

\end_inset

Moving the World
\end_layout

\begin_layout Standard
On the technical side, the projection matrices are fixed such that the room
 doesn't move, and so to navigate we actually move the world.
 This is functionally equivalent to moving the room in the world, but inverse.
 This technicality may be confusing to the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Application Sees Two Roots
\end_layout

\begin_layout Standard
The 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

 by default is provided with two scenegraph root nodes that they can add
 children to: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RelativeTo.World
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RelativeTo.Room
\end_layout

\end_inset

, with the obvious meaning.
 Though they are of course related, neither is a child of the other, to
 keep the transform between room and world under navigation control and
 preserve the appearance of two roots.
\end_layout

\begin_layout Subsubsection
Tracked Coordinate Frames
\end_layout

\begin_layout Standard
The pose of the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

's head and other input devices are also tracked (situating a coordinate
 system at them in some standard or known location), with the transform
 reported with respect to the world frame.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Assumptions
\end_layout

\begin_layout Standard
The structure of these assumptions is similar to the structure of the requiremen
ts (see
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Structure-of-Requirements"

\end_inset

).
 However, there is often minimal detail beyond a full description sentence;
 if assumptions are considered to be similar to axioms, then any proof seems
 contrary to the definition of axiom as an unproven proposition accepted
 to be true.
 That said, there may be some use for recording arguments for the reasonableness
 of making these assumptions.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Are any of these assumptions questionable? Should any be supported by some
 citations for our future reference?
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-navigation-useful"

\end_inset

Navigation Broadly Useful
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Standard
Navigation is a generally-useful operation for a wide range of VR applications.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Santos 2008 (EGVE) cited 
\begin_inset Quotes eld
\end_inset

3D user interfaces : theory and practice
\begin_inset Quotes erd
\end_inset

 book by Bowman et al here
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-4dof-nav"

\end_inset

4DoF Necessary and Sufficient
\end_layout

\begin_layout Paragraph
Full Description
\end_layout

\begin_layout Standard
Navigation in 4 degrees of freedom (3 translation, and rotation about 
\begin_inset Formula $y$
\end_inset

 - the direction of gravity) is both sufficient, and preferable to full
 6DoF navigation.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-one-size-doesnt-fit-all"

\end_inset

One Size Doesn't Fit All
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Standard
Navigation techniques are an open field, so no single technique should be
 imposed on all 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

s.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-incremental-common"

\end_inset

Incremental Navigation Common
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Standard
Incremental navigation is the more common scenario (as opposed to absolute
 navigation).
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-both-frames-important"

\end_inset

Both Frames Important
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

 actions in an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

 may need to be interpreted with respect to the world frame or the room
 frame.
\end_layout

\begin_layout Paragraph*
Notes
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sub:Coordinate-frames"

\end_inset

 for details.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:assume-examples-define-api"

\end_inset

Examples Effectively Define API
\end_layout

\begin_layout Paragraph*
Full Description
\end_layout

\begin_layout Standard
An API will be most commonly used by an 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:App-Developer"

\end_inset

 as demonstrated in examples provided with the API.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Requirements"

\end_inset

Requirements
\end_layout

\begin_layout Subsection
Navigation Controls Room-World Transform
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Navigation shall update the transform between the room and the world frames
 based on 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

 input.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
This is the motivating purpose of navigation.
\end_layout

\begin_layout Subsubsection
User Translation and Rotation About 
\begin_inset Formula $y$
\end_inset


\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Navigation shall be able to update in such a way to simulate 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

 translation and rotation about the 
\begin_inset Formula $y$
\end_inset

 axis.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
This is effectively walking/hovering in 3D and turning without changing
 the direction of gravity to reduce DoF from a full 3 translation and 3
 rotational DoF.
\end_layout

\begin_layout Paragraph*
History
\end_layout

\begin_layout Standard
Initially only translation was supported, based on the idea that we have
 a C6 and body-based rotation is superior.
 However, not having rotation has been shown to be insufficient - you don't
 usually have a C6.
\end_layout

\begin_layout Standard
The initial navigation system does support rotation (about the 
\begin_inset Formula $y$
\end_inset

 axis at the room origin) but only for 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

-defined navigation functions, not the default.
\end_layout

\begin_layout Subsection
Application-Definable Navigation Functions
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
The relationship between 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

 input and transform updates (
\begin_inset Quotes eld
\end_inset

navigation function
\begin_inset Quotes erd
\end_inset

) shall be separate and able to be defined by an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-one-size-doesnt-fit-all"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Multiple Navigation Functions
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Potentially more than one navigation function shall be supported simultaneously.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
Consider, for example, having a redirected-walking-in-place with a gamepad
 for precision movement.
 Each frame, the sum of translation and sum of rotation updates are applied.
\end_layout

\begin_layout Standard
This should integrate well with Actions - multiple Actions should be able
 to submit navigation updates without having to know about each other.
\end_layout

\begin_layout Subsection
Navigation by Default
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
A default navigation function shall be provided.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-navigation-useful"

\end_inset

 - so unless an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

 (and thus, an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

) specifies otherwise, navigation should be provided.
\end_layout

\begin_layout Subsubsection
4 DoF by Default
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
The default navigation function shall allow 4 DoF navigation.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-4dof-nav"

\end_inset

.
\end_layout

\begin_layout Paragraph*
History
\end_layout

\begin_layout Standard
The previous version of navigation only allowed translation, resulting in
 difficult situations in immersive environments and observed field use of
 simulated head movement controls in a simulator environment.
\end_layout

\begin_layout Subsubsection
Default Replaceable
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
The default navigation function shall be able to be replaced by the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-one-size-doesnt-fit-all"

\end_inset

.
\end_layout

\begin_layout Subsection
Incremental Navigation
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Incremental changes to navigation state by an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

 shall be supported.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-incremental-common"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Incremental Translation in Room Frame
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Incremental translation shall be a vector specified/interpreted with respect
 to the current 
\begin_inset Quotes eld
\end_inset

room
\begin_inset Quotes erd
\end_inset

 frame.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
Seems to follow from assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-incremental-common"

\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

-centric.
\end_layout

\begin_layout Subsubsection
Incremental Rotation About 
\begin_inset Formula $y$
\end_inset

 at Point In Room Frame
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Incremental rotation shall be a scalar (in radians) along with a 2D location
 in the current 
\begin_inset Quotes eld
\end_inset

room
\begin_inset Quotes erd
\end_inset

 frame specifying an axis of rotation.
\end_layout

\begin_layout Paragraph*
Questions
\end_layout

\begin_layout Standard
Perhaps defaulting to rotation about head position projected on the 
\begin_inset Formula $(x,z)$
\end_inset

 plane? (
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:User"

\end_inset

-centric rotation)
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-4dof-nav"

\end_inset

.
\end_layout

\begin_layout Paragraph*
History
\end_layout

\begin_layout Standard
Initially all rotation was about 
\begin_inset Formula $y$
\end_inset

 axis at room origin, which isn't too natural feeling.
\end_layout

\begin_layout Subsection
Absolute Navigation
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Absolute changes to navigation state (set/reset) by an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:Application"

\end_inset

 shall be supported.
\end_layout

\begin_layout Paragraph*
Questions
\end_layout

\begin_layout Standard
Do we require the specification of a full transform matrix here?
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
May want to 
\begin_inset Quotes eld
\end_inset

return to start,
\begin_inset Quotes erd
\end_inset

 or programmatically move to a different part of the world, despite assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-incremental-common"

\end_inset

.
 That assumption also indicates that the importance here is that the interface
 exists, and not necessarily that it is ideal - it may evolve over time.
\end_layout

\begin_layout Subsection
Access Both Transforms
\end_layout

\begin_layout Standard
Easy access to the room-to-world and world-to-room transforms shall be provided
 for use by the 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:App-Developer"

\end_inset

.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-both-frames-important"

\end_inset


\end_layout

\begin_layout Subsection
Design for Collision Detection
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Navigation actions shall be able to be validated, by e.g.
 some physics or collision detection
\end_layout

\begin_layout Paragraph*
Questions
\end_layout

\begin_layout Standard
Lots - do we just make collision detection an additional Action that applies
 navigation updates when the 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:User"

\end_inset

 is somewhere they shouldn't be? (essentially penalty-based - problems include
 tunnelling.) Do we have a stack of navigation validating functions that
 are called before any navigation change is incorporated into the navigation
 matrix?
\end_layout

\begin_layout Subsection
Examples Included for Application Developer
\end_layout

\begin_layout Paragraph*
Full Requirement
\end_layout

\begin_layout Standard
Minimal examples for use by the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "def:App-Developer"

\end_inset

 shall be provided for all aspects of the navigation system's API as specified.
\end_layout

\begin_layout Paragraph*
Rationale
\end_layout

\begin_layout Standard
See assumption
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:assume-examples-define-api"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
This requirement may need its sub-requirements (individual examples) elaborated
 and explicitly specified.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
